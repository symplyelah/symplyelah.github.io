---
title: "Bridging Data and Decision-Making: Data Visualization Techniques with R"
subtitle: "IEEE Nigeria Southeast Subsection"
author: Ifeoma Egbogah
format: 
  rladies-revealjs
incremental: false
embed-resources: true
editor_options: 
  chunk_output_type: console
---


# Data {.inverse}

## What is Data?

Data refers to **raw facts, figures,** and **statistics** that are collected through observation, measurement, research, or experimentation. On their own, data have no meaning until they are organized, analyzed, and interpreted.


### Key Characteristics of Data:

-   **Raw**: Unprocessed and unorganized

-   **Factual:** Based on real-world events, measurements, or records

## Data Types

### **Numerical** or **Quantitative Data**

Numerical (or Quantitative) Data refers to data that represents measurable quantities—that is, values that can be counted or measured and expressed in numbers.

:::: columns
::: {.column width="100%"} 

<div style="text-align: center;">
  <img src="images/numerical.png" width="50%">
</div>

:::
::::

## Data Types Contd.

### **Numerical** or **Quantitative Data**


::: columns
::: {.column width="100%"}

<div style="text-align: center; font-size: 0.75em;">
+--------------------------------------------------------+----------------------------------------------------------+
| Continuous Data                                        | Discrete Data                                            |
+========================================================+==========================================================+
| Data that can take **any value within a range**.       | Data that can take only **specific, separate values**.   |
+--------------------------------------------------------+----------------------------------------------------------+
| **Usually measured** (can include decimals/fractions). | **Usually countable** (no decimals)                      |
+--------------------------------------------------------+----------------------------------------------------------+
| **Examples:**                                          | **Examples:**                                            |
|                                                        |                                                          |
| -    Height of a person (e.g., 1.75 meters)            | -    Number of employees in a company (e.g., 15, 23, 50) |
|                                                        |                                                          |
| -    Temperature (e.g., 36.6°C)                        | -    Number of students in a classroom                   |
|                                                        |                                                          |
| -    Sales revenue (e.g., ₦1,254,500.75)               | -    Number of cars sold in a day                        |
+--------------------------------------------------------+----------------------------------------------------------+
</div>
:::
:::

## Data Types Contd.

### Key Features of Numerical Data:
- Can be compared, ordered, added, or averaged

- Suitable for mathematical and statistical analysis

- Often visualized using bar charts, histograms, line graphs, or scatter plots



## Data Types Contd.

### **Categorical** or **Qualitative Data**

Categorical (or Qualitative) Data refers to data that describes qualities or characteristics. Instead of numbers, it uses labels, names, or categories to represent information.


:::: columns
::: {.column width="100%"}

<div style="text-align: center;">
  <img src="images/categorical.png" width="50%">
</div>
:::
::::

## Data Types Contd.

### Key Feature of Categorical Data:
- Descriptive rather than numerical

- Used to classify or group data

- Cannot be meaningfully added, subtracted, or averaged

- Can be visualized using bar charts, pie charts, or tables

## Why Data Visualization Matters

-   Humans process visuals 60,000x faster than text

-   Visuals simplify complex data

-   Helps identify trends, outliers, and patterns

-   Supports data-driven decisions

## Choosing the appropriate graph(s) for the data

So before any visualisation always consider:

- Discrete & continuous quantities
- Categeories

# Understanding Visualization Types {.inverse}

## Visualising numerical variables

Sometimes you are interested in the magnitude of some set of numbers.

:::: columns
::: {.column width="100%"}

<div style="text-align: center;">
  <img src="images/amounts-1.png" width="100%">
</div>

:::
::::

```{r}
#| echo: false

library(tidyverse)
library(ggalt)
library(tidytext)

theme_set(theme_light())

phd_field <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2019/2019-02-19/phd_by_field.csv")

wal_train <- read_csv("data/train.csv")
```

## PhD

::: panel-tabset

### Code 1


```{r}
#| echo: true
 
  phd_field |>
    group_by(broad_field) |> 
    summarise(phd_total = sum(n_phds, na.rm = TRUE)) |>
    mutate(broad_field = fct_reorder(broad_field, phd_total)) |> 
    ggplot(aes(phd_total, broad_field)) +
    geom_col() +
    scale_x_continuous(labels = scales::comma_format()) +
    labs(title = "PhD Awarded from 2008 to 2017 in the USA",
       x = "Number of PhD",
       y = "Field/Faulty",
       caption = "Data: Dr Ellie • Viz: Ifeoma Egbogah")

```

### PhD Awards


```{r}

phd_total

```


### Code 2

```{r}
#| echo: true

phd_field |> 
  group_by(broad_field, major_field) |> 
  summarise(phd_total = sum(n_phds, na.rm = TRUE), .groups = "drop") |>
  mutate(major_field = fct_reorder(major_field, phd_total)) |> 
  ggplot(aes(phd_total, major_field)) +
  geom_col() +
  scale_x_continuous(labels = scales::comma_format()) +
  labs(x = "Number of PhD",
       y = "Department",
       title = "Total Number of PhDs Awarded by Departments from 2008 to 2017")

  geom_lollipop(horizontal = TRUE, point.size = 2) +
  geom_lollipop(data = wal_train |> 
                  mutate(year = year(date)) |>
                  group_by(store_nbr, year) |>
                  summarise(total = sum(units), .groups = "drop") |>
                  filter(store_nbr == 16) |> 
                  mutate(store_nbr = reorder_within(factor(store_nbr), total, year)), 
                aes(total, store_nbr), horizontal = TRUE, colour = "#88398A", fill = "#88398A", point.colour = "#88398A", point.size = 3, size = 1.4) +
  scale_y_reordered() +
  scale_x_continuous(labels = scales::comma_format()) +
  facet_wrap(~year, scales = "free") +
  labs(title = "Walmart Store Sales Faceted by Year",
       subtitle = str_wrap("This visualization breaks down total units sold by store for each year (2012, 2013, 2014) separately. Faceting shows how demand patterns shifted year-to-year, revealing trends or anomalies over time.", width = 150),
       x = "Total Units Sold",
       y = "Walmart Store",
       caption = "Data: Kaggle • Viz: Ifeoma Egbogah")

```

### Depart. Total

```{r}

depart_total

```

### Code 3
```{r}

phd_field |> 
 # filter(year %in% seq(2008, 2010, 1)) |> 
  group_by(major_field, year) |> 
  summarise(phd_total = sum(n_phds, na.rm = TRUE), .groups = "drop") |>
  mutate(major_field = fct_reorder(major_field, phd_total)) |> 
  ggplot(aes(phd_total, major_field)) +
  geom_lollipop(horizontal = TRUE) +
  facet_wrap(~year, nrow = 2)
  


```


### By year

```{r}
phd_by_year
```


:::


## Visualising numerical variables

We frequently encounter situations where we want to understand how a particular variable is distributed within a dataset. For example, in a sales dataset, we might be interested in examining the distribution of monthly revenue, the number of units sold per product, or the average transaction value. Understanding these distributions helps us identify patterns, spot outliers, and make data-driven decisions for improving business performance.

:::: columns
::: {.column width="100%"}

<div style="text-align: center;">
  <img src="images/single-distributions-1.png" width="70%">
</div>

:::
::::

###  Walmart Distribution of Sales

::: panel-tabset

### Code 1
```{r}
#| echo: true
item_stat <- wal_train |> 
  ggplot(aes(units)) +
  geom_histogram() +
  guides(x = guide_axis(angle = 90)) +
  labs(title = "Distribution of Items Sold",
       y = "Item Number",
       x = "Units Sold",
       caption = "Data: Kaggle • Viz: Ifeoma Egbogah")

```

### Plot:Item
```{r}
item_stat
```

:::

| Chart Type   | Best For                     |
|--------------|------------------------------|
| Line Chart   | Trends over time             |
| Bar Chart    | Comparing categories         |
| Scatter Plot | Correlations, relationships  |
| Maps         | Geospatial data              |
| Dashboard    | Monitoring KPIs in real-time |

*Tip:* Choose simplicity and clarity over complexity.

# Real World Scenario: Walmart and Weather {.inverse}

:::: columns
::: {.column width="100%"}

<div style="text-align: center;">
  <img src="images/poptarts.png" width="50%">
</div>
:::
::::

## Walmart  

<div style="font-size: 0.75em;">

**Context:** We can’t control the weather, yet it affects everything we do. Most days are calm, but when Mother Nature shows her power, normal life is turned upside down.

In these moments, how can businesses keep operating and support communities?

In 2004 as Hurricane Frances roared through the Caribbean toward Florida, Walmart’s team asked themselves — how can we prepare smarter? Which products will people desperately need?

Walmart used historical sales data to anticipate what people would need most.

**Insight:** While obvious necessities like bottled water, flashlights, and batteries were expected, the data revealed a surprising pattern: strawberry Pop‑Tarts sales increased sevenfold, and beer became the top-selling item

**Action Taken:** Walmart stocked these items in bulk at regional distribution centers in the hurricane path.

</div>


## Walmart: Summary statistics of active inventory performance


::: panel-tabset

### Code 1
```{r}
#| echo: true
item_stat <- wal_train |> 
  filter(units > 0 & units <2000) |>  
  mutate(store = glue::glue("Store {store_nbr}")) |> 
  group_by(store) |> 
  ggplot(aes(units, factor(item_nbr))) +
  geom_boxplot(outlier.shape = 16, outlier.size = 1.5, fill = "#f8f8f8", color = "#88398A") +
  coord_flip() +
  guides(x = guide_axis(angle = 90)) +
  labs(title = "Distribution of Items Sold",
       y = "Item Number",
       x = "Units Sold",
       caption = "Data: Kaggle • Viz: Ifeoma Egbogah")

```

### Plot:Item
```{r}
item_stat
```

### Code 2
```{r}
#| echo: true
store <- wal_train |> 
  filter(units > 0) |>  
  filter(store_nbr %in% seq(1, 5, 1)) |> 
  mutate(store = glue::glue("Store {store_nbr}")) |> 
  group_by(store) |> 
  ggplot(aes(units, factor(item_nbr))) +
  geom_boxplot(outlier.shape = 16, outlier.size = 1.5, fill = "#f8f8f8", color = "#88398A") +
  facet_wrap(~store,  scales = "free", nrow = 1) +
  labs(title = "Distribution of Units Sold by Item across Stores 1 to 5",
       y = "Item Number",
       x = "Units Sold",
       caption = "Data: Kaggle • Viz: Ifeoma Egbogah") +
  theme_minimal() + 
  theme(plot.title = element_text(colour = "#562457", face = "bold", hjust = 0.5),
        strip.text = element_text(face = "bold"), 
        axis.text.y = element_text(size = 6))
```

### Plot:Store 1-5
```{r}
store
```

### Code 3
```{r}
#| echo: true
store_by_year <- wal_train |> 
  mutate(year = year(date)) |>
  filter(units > 0) |> 
  filter(store_nbr %in% seq(1, 5, 1)) |> 
  group_by(store_nbr, year) |> 
  ggplot(aes(units, factor(item_nbr))) +
 geom_boxplot(outlier.shape = 16, outlier.size = 1.5, fill = "#f8f8f8", color = "#88398A") +
  facet_grid(rows = vars(year), cols = vars(store_nbr), scales = "free_y") +
  labs(title = "Distribution of Units Sold by Item across Stores 1 to 5",
       y = "Item Number",
       x = "Units Sold",
       caption = "Data: Kaggle • Viz: Ifeoma Egbogah") +
  #theme_minimal() + 
  theme(plot.title = element_text(colour = "#562457", face = "bold", hjust = 0.5),
        strip.text = element_text(face = "bold"), 
        axis.text.y = element_text(size = 6))
  

```

### Plot: By_year
```{r}
store_by_year
```

:::



# Real World Scenario: Nigerian Brewries {.inverse}

:::: columns
::: {.column width="100%"}

<div style="text-align: center;">
  <img src="images/nig_brew_logo.png" width="60%", height="70%">
</div>
:::
::::



## COVID-19

COVID-19 dashboards helped governments track and respond to infection spikes and vaccinations.

:::: columns
::: {.column width="50%"}
![](images/maryland_covid.png)
:::
::::

# Bridging the Gap Between Data and Decisions {.inverse}

## Mind the Gap

**Problem:** Data is abundant, but insights are scarce.

**Solution:** Visualization bridges the gap between raw data and strategic action.

**Outcome:** Simplifies storytelling and supports real-time decisions.

# What is R and Why Use It? {.inverse}

## R

-   Free and open-source statistical language

-   Used in academia and business

-   Integrates data wrangling, analysis, and visualization

*Key Visualization Packages:*

`ggplot2`

`plotly`

`shiny`

## Data Visualization

:::: columns
::: {.column width="100%"}
<div style="text-align: center;">
  <img src="images/program.png" width="70%">
</div>
:::
::::



# Case Study {.inverse}

## Academic Use Case – Education Access

**Dataset:** World Bank (Literacy vs Internet Access)

**Visualization:** Scatter plot showing socio-economic development.

**Insight:** Nigeria lags behind Kenya and Egypt in internet penetration despite comparable literacy rates.
